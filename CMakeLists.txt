cmake_policy(SET CMP0091 NEW)
cmake_minimum_required(VERSION 3.21)

project(seven)
SET(SEVEN_VERSION "1.1")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CONFIGURATION_TYPES "Debug;Release")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DRELEASE=1")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEVELOPMENT=1")

if (MSVC)
add_compile_options(/W4)
add_compile_options(/WX)
add_compile_options(/wd4100)
add_compile_options(/wd4388)
add_compile_options(/wd26451)
add_compile_options(/wd26498)
add_compile_options(/wd26812)
add_compile_options(/external:W0)
add_compile_options(/fp:fast)
add_compile_options(/arch:AVX2)
#add_compile_options(/Qvec-report:2)
add_definitions(-D_CRT_SECURE_NO_WARNINGS)
string(REPLACE "/" "\\" VST_SDK_376_SRC_DIR_WIN32 ${VST_SDK_376_SRC_DIR})
else ()
add_compile_options(-std=c++2a)
add_compile_options(-Wall)
add_compile_options(-Wextra)
add_compile_options(-Werror)
add_compile_options(-Wno-sign-compare)
add_compile_options(-Wno-unused-parameter)
add_compile_options(-mavx2)
add_compile_options(-ffast-math)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
endif()

# VST SDK debug binaries.
find_library(VST3_BASE_LIB_Debug base PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")
find_library(VST3_SDK_LIB_Debug sdk PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")
find_library(VST3_SDK_COMMON_LIB_Debug sdk_common PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")
find_library(VST3_PLUGINTERFACES_LIB_Debug pluginterfaces PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")
find_library(VST3_VSTGUI_LIB_Debug vstgui PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")
find_library(VST3_VSTGUI_SUPPORT_LIB_Debug vstgui_support PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")
find_library(VST3_VSTGUI_UIDESCRIPTION_LIB_Debug vstgui_uidescription PATHS "${VST_SDK_376_BUILD_DEBUG_DIR}")

# VST SDK release binaries.
find_library(VST3_BASE_LIB_Release base PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")
find_library(VST3_SDK_LIB_Release sdk PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")
find_library(VST3_SDK_COMMON_LIB_Release sdk_common PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")
find_library(VST3_PLUGINTERFACES_LIB_Release pluginterfaces PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")
find_library(VST3_VSTGUI_LIB_Release vstgui PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")
find_library(VST3_VSTGUI_SUPPORT_LIB_Release vstgui_support PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")
find_library(VST3_VSTGUI_UIDESCRIPTION_LIB_Release vstgui_uidescription PATHS "${VST_SDK_376_BUILD_RELEASE_DIR}")

# Svn base library.
set(SVN_BASE_SRC_DIR "src/svn.base")
file(GLOB_RECURSE SVN_BASE_SRC "${SVN_BASE_SRC_DIR}/*.*")
add_library(seven.base STATIC ${SVN_BASE_SRC})
target_include_directories(seven.base PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.base SYSTEM PRIVATE ${HIIR_140_SRC_DIR})
if (MSVC)
source_group(TREE "../../${SVN_BASE_SRC_DIR}" FILES ${SVN_BASE_SRC})
endif()

# Svn synth library.
set(SVN_SYNTH_SRC_DIR "src/svn.synth")
file(GLOB_RECURSE SVN_SYNTH_SRC "${SVN_SYNTH_SRC_DIR}/*.*")
add_library(seven.synth STATIC ${SVN_SYNTH_SRC})
target_include_directories(seven.synth PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.synth PRIVATE ${SVN_SYNTH_SRC_DIR})
target_include_directories(seven.synth SYSTEM PRIVATE ${HIIR_140_SRC_DIR})
target_link_libraries(seven.synth seven.base)
if (MSVC)
source_group(TREE "../../${SVN_SYNTH_SRC_DIR}" FILES ${SVN_SYNTH_SRC})
endif()

# Svn vst base library.
set(SVN_VST_BASE_SRC_DIR "src/svn.vst.base")
file(GLOB_RECURSE SVN_VST_BASE_SRC "${SVN_VST_BASE_SRC_DIR}/*.*")
add_library(seven.vst.base STATIC ${SVN_VST_BASE_SRC})
target_compile_definitions(seven.vst.base PRIVATE $<$<CONFIG:Debug>:DEVELOPMENT=1>)
target_include_directories(seven.vst.base PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.base PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.base SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR})
target_include_directories(seven.vst.base SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.base seven.base)
target_link_libraries(seven.vst.base debug "${VST3_BASE_LIB_Debug}" optimized "${VST3_BASE_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VST3_SDK_LIB_Debug}" optimized "${VST3_SDK_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VST3_SDK_COMMON_LIB_Debug}" optimized "${VST3_SDK_COMMON_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VST3_PLUGINTERFACES_LIB_Debug}" optimized "${VST3_PLUGINTERFACES_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VST3_VSTGUI_LIB_Debug}" optimized "${VST3_VSTGUI_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VST3_VSTGUI_SUPPORT_LIB_Debug}" optimized "${VST3_VSTGUI_SUPPORT_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VST3_VSTGUI_UIDESCRIPTION_LIB_Debug}" optimized "${VST3_VSTGUI_UIDESCRIPTION_LIB_Release}")
if (MSVC)
source_group(TREE "../../${SVN_VST_BASE_SRC_DIR}" FILES ${SVN_VST_BASE_SRC})
target_compile_options(seven.vst.base PRIVATE /external:I ${VST_SDK_376_SRC_DIR_WIN32})
endif()

# Svn vst synth fx generic.
set(SVN_VST_SYNTH_FX_GENERIC_SRC_DIR "src/svn.vst.synth.fx")
file(GLOB_RECURSE SVN_VST_SYNTH_FX_GENERIC_SRC "${SVN_VST_SYNTH_FX_GENERIC_SRC_DIR}/*.*")
add_library(seven.vst.synth.fx.generic SHARED ${SVN_VST_SYNTH_FX_GENERIC_SRC})
target_compile_definitions(seven.vst.synth.fx.generic PRIVATE -DSVN_VERSIONED=0)
target_include_directories(seven.vst.synth.fx.generic PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.fx.generic PRIVATE ${SVN_SYNTH_SRC_DIR})
target_include_directories(seven.vst.synth.fx.generic PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.fx.generic PRIVATE ${SVN_VST_SYNTH_FX_GENERIC_SRC_DIR})
target_include_directories(seven.vst.synth.fx.generic SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR})
target_include_directories(seven.vst.synth.fx.generic SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.synth.fx.generic seven.base)
target_link_libraries(seven.vst.synth.fx.generic seven.synth)
target_link_libraries(seven.vst.synth.fx.generic seven.vst.base)
set_target_properties(seven.vst.synth.fx.generic PROPERTIES SUFFIX ".vst3")
set_target_properties(seven.vst.synth.fx.generic PROPERTIES OUTPUT_NAME "SevenSynthFX")
set_target_properties(seven.vst.synth.fx.generic PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynthFX.vst3/Contents/x86_64-win")
set_target_properties(seven.vst.synth.fx.generic PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynthFX.vst3/Contents/x86_64-win")
add_custom_target(copy-resources-synth-fx-generic-debug ALL DEPENDS seven.vst.synth.fx.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynthFX.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-fx-generic-release ALL DEPENDS seven.vst.synth.fx.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynthFX.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-fx-generic-debug ALL DEPENDS seven.vst.synth.fx.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/fx ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynthFX.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-fx-generic-release ALL DEPENDS seven.vst.synth.fx.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/fx ${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynthFX.vst3/Contents/Resources)
add_custom_target(copy-uidesc-synth-fx-generic-debug ALL DEPENDS seven.vst.synth.fx.generic COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynthFX.vst3/Contents/Resources/controller.uidesc)
add_custom_target(copy-uidesc-synth-fx-generic-release ALL DEPENDS seven.vst.synth.fx.generic COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynthFX.vst3/Contents/Resources/controller.uidesc)

if (MSVC)
source_group(TREE "../../${SVN_VST_SYNTH_FX_GENERIC_SRC_DIR}" FILES ${SVN_VST_SYNTH_FX_GENERIC_SRC})
target_compile_options(seven.vst.synth.fx.generic PRIVATE /external:I ${VST_SDK_376_SRC_DIR_WIN32})
endif()

# Svn vst synth fx versioned.
set(SVN_VST_SYNTH_FX_VERSIONED_SRC_DIR "src/svn.vst.synth.fx")
file(GLOB_RECURSE SVN_VST_SYNTH_FX_VERSIONED_SRC "${SVN_VST_SYNTH_FX_VERSIONED_SRC_DIR}/*.*")
add_library(seven.vst.synth.fx.versioned SHARED ${SVN_VST_SYNTH_FX_VERSIONED_SRC})
target_compile_definitions(seven.vst.synth.fx.versioned PRIVATE -DSVN_VERSIONED=1)
target_include_directories(seven.vst.synth.fx.versioned PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.fx.versioned PRIVATE ${SVN_SYNTH_SRC_DIR})
target_include_directories(seven.vst.synth.fx.versioned PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.fx.versioned PRIVATE ${SVN_VST_SYNTH_FX_VERSIONED_SRC_DIR})
target_include_directories(seven.vst.synth.fx.versioned SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR})
target_include_directories(seven.vst.synth.fx.versioned SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.synth.fx.versioned seven.base)
target_link_libraries(seven.vst.synth.fx.versioned seven.synth)
target_link_libraries(seven.vst.synth.fx.versioned seven.vst.base)
set_target_properties(seven.vst.synth.fx.versioned PROPERTIES SUFFIX ".vst3")
set_target_properties(seven.vst.synth.fx.versioned PROPERTIES OUTPUT_NAME "SevenSynthFX${SEVEN_VERSION}")
set_target_properties(seven.vst.synth.fx.versioned PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/x86_64-win")
set_target_properties(seven.vst.synth.fx.versioned PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/x86_64-win")
add_custom_target(copy-resources-synth-fx-versioned-debug ALL DEPENDS seven.vst.synth.fx.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-fx-versioned-release ALL DEPENDS seven.vst.synth.fx.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-fx-versioned-debug ALL DEPENDS seven.vst.synth.fx.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/fx ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-fx-versioned-release ALL DEPENDS seven.vst.synth.fx.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/fx ${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-uidesc-synth-fx-versioned-debug ALL DEPENDS seven.vst.synth.fx.versioned COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/Resources/controller.uidesc)
add_custom_target(copy-uidesc-synth-fx-versioned-release ALL DEPENDS seven.vst.synth.fx.versioned COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynthFX${SEVEN_VERSION}.vst3/Contents/Resources/controller.uidesc)

if (MSVC)
source_group(TREE "../../${SVN_VST_SYNTH_FX_VERSIONED_SRC_DIR}" FILES ${SVN_VST_SYNTH_FX_VERSIONED_SRC})
target_compile_options(seven.vst.synth.fx.versioned PRIVATE /external:I ${VST_SDK_376_SRC_DIR_WIN32})
endif()

# Svn vst synth instrument generic.
set(SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC_DIR "src/svn.vst.synth.instrument")
file(GLOB_RECURSE SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC "${SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC_DIR}/*.*")
add_library(seven.vst.synth.instrument.generic SHARED ${SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC})
target_compile_definitions(seven.vst.synth.instrument.generic PRIVATE -DSVN_VERSIONED=0)
target_include_directories(seven.vst.synth.instrument.generic PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.generic PRIVATE ${SVN_SYNTH_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.generic PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.generic PRIVATE ${SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.generic SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.generic SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.synth.instrument.generic seven.base)
target_link_libraries(seven.vst.synth.instrument.generic seven.synth)
target_link_libraries(seven.vst.synth.instrument.generic seven.vst.base)
set_target_properties(seven.vst.synth.instrument.generic PROPERTIES SUFFIX ".vst3")
set_target_properties(seven.vst.synth.instrument.generic PROPERTIES OUTPUT_NAME "SevenSynth")
set_target_properties(seven.vst.synth.instrument.generic PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynth.vst3/Contents/x86_64-win")
set_target_properties(seven.vst.synth.instrument.generic PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynth.vst3/Contents/x86_64-win")
add_custom_target(copy-resources-synth-instrument-generic-debug ALL DEPENDS seven.vst.synth.instrument.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynth.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-instrument-generic-release ALL DEPENDS seven.vst.synth.instrument.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynth.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-instrument-generic-debug ALL DEPENDS seven.vst.synth.instrument.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/instrument ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynth.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-instrument-generic-release ALL DEPENDS seven.vst.synth.instrument.generic COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/instrument ${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynth.vst3/Contents/Resources)
add_custom_target(copy-uidesc-synth-instrument-generic-debug ALL DEPENDS seven.vst.synth.instrument.generic COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Generic/SevenSynth.vst3/Contents/Resources/controller.uidesc)
add_custom_target(copy-uidesc-synth-instrument-generic-release ALL DEPENDS seven.vst.synth.instrument.generic COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Release/SevenSynth/Generic/SevenSynth.vst3/Contents/Resources/controller.uidesc)

if (MSVC)
source_group(TREE "../../${SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC_DIR}" FILES ${SVN_VST_SYNTH_INSTRUMENT_GENERIC_SRC})
target_compile_options(seven.vst.synth.instrument.generic PRIVATE /external:I ${VST_SDK_376_SRC_DIR_WIN32})
endif()

# Svn vst synth instrument versioned.
set(SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC_DIR "src/svn.vst.synth.instrument")
file(GLOB_RECURSE SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC "${SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC_DIR}/*.*")
add_library(seven.vst.synth.instrument.versioned SHARED ${SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC})
target_compile_definitions(seven.vst.synth.instrument.versioned PRIVATE -DSVN_VERSIONED=1)
target_include_directories(seven.vst.synth.instrument.versioned PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.versioned PRIVATE ${SVN_SYNTH_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.versioned PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.versioned PRIVATE ${SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.versioned SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR})
target_include_directories(seven.vst.synth.instrument.versioned SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.synth.instrument.versioned seven.base)
target_link_libraries(seven.vst.synth.instrument.versioned seven.synth)
target_link_libraries(seven.vst.synth.instrument.versioned seven.vst.base)
set_target_properties(seven.vst.synth.instrument.versioned PROPERTIES SUFFIX ".vst3")
set_target_properties(seven.vst.synth.instrument.versioned PROPERTIES OUTPUT_NAME "SevenSynth${SEVEN_VERSION}")
set_target_properties(seven.vst.synth.instrument.versioned PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/x86_64-win")
set_target_properties(seven.vst.synth.instrument.versioned PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/x86_64-win")
add_custom_target(copy-resources-synth-instrument-versioned-debug ALL DEPENDS seven.vst.synth.instrument.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-instrument-versioned-release ALL DEPENDS seven.vst.synth.instrument.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/resources ${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-instrument-versioned-debug ALL DEPENDS seven.vst.synth.instrument.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/instrument ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-presets-synth-instrument-versioned-release ALL DEPENDS seven.vst.synth.instrument.versioned COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/presets/instrument ${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/Resources)
add_custom_target(copy-uidesc-synth-instrument-versioned-debug ALL DEPENDS seven.vst.synth.instrument.versioned COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Debug/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/Resources/controller.uidesc)
add_custom_target(copy-uidesc-synth-instrument-versioned-release ALL DEPENDS seven.vst.synth.instrument.versioned COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/resources/controller.uidesc ${CMAKE_BINARY_DIR}/Release/SevenSynth/Versioned/SevenSynth${SEVEN_VERSION}.vst3/Contents/Resources/controller.uidesc)

if (MSVC)
source_group(TREE "../../${SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC_DIR}" FILES ${SVN_VST_SYNTH_INSTRUMENT_VERSIONED_SRC})
target_compile_options(seven.vst.synth.instrument.versioned PRIVATE /external:I ${VST_SDK_376_SRC_DIR_WIN32})
endif()

# Svn vst ui generator.
set(SVN_VST_UI_SRC_DIR "src/svn.vst.ui")
file(GLOB_RECURSE SVN_VST_UI_SRC "${SVN_VST_UI_SRC_DIR}/*.*")
add_executable(seven.vst.ui ${SVN_VST_UI_SRC})
target_include_directories(seven.vst.ui PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.ui PRIVATE ${SVN_VST_UI_SRC_DIR})
target_include_directories(seven.vst.ui SYSTEM PRIVATE ${VST_SDK_376_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.ui seven.base)
if (MSVC)
source_group(TREE "../../${SVN_VST_UI_SRC_DIR}" FILES ${SVN_VST_UI_SRC})
target_compile_options(seven.vst.ui PRIVATE /external:I ${VST_SDK_376_SRC_DIR_WIN32})
else ()
target_link_libraries(seven.vst.ui dl)
endif()
